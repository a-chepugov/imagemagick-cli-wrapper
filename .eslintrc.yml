env:
  es2020: true
  node: true
  jest: true
extends:
  - eslint:recommended
rules:
  class-methods-use-this: warn
  comma-dangle: [error, {
    arrays: always-multiline,
    objects: always-multiline,
    functions: never,
    imports: never,
    exports: never,
    }]
  consistent-return: error
  default-case: error
  dot-notation: error
  eqeqeq: [error, always]
  indent: [error, tab, { SwitchCase: 1 }]
  max-len: [error, { code: 120 }]
  no-bitwise: warn
  no-console: [ warn, { allow: [ info, warn, error, trace ] }]
  no-duplicate-imports: error
  no-multi-spaces: error
  no-negated-condition: error
  no-new-func: [warn]
  no-promise-executor-return: error
  #no-tabs: [error, { allowIndentationTabs: true }]
  no-template-curly-in-string: error
  no-unmodified-loop-condition: error
  no-unreachable-loop: error
#  no-unused-private-class-members: error
  no-unused-vars: off
#  no-unused-vars: [error, {
#    vars: all,
#    args: after-used,
#    ignoreRestSiblings: false,
#    }]
  no-useless-rename: [error, {
    ignoreDestructuring: false,
    ignoreImport: false,
    ignoreExport: true
    }]
  object-curly-spacing: [error, always]
  object-property-newline: [off]
  operator-linebreak: [error, before]
  require-atomic-updates: error
  require-jsdoc: [warn, {
    require: {
      ClassDeclaration: true,
      MethodDefinition: false,
      FunctionExpression: false,
      FunctionDeclaration: false,
      ArrowFunctionExpression: false,
    }
  }]
  semi: [error, always]
  space-before-function-paren: [error, {
    anonymous: never,
    named: never,
    asyncArrow: always,
    }]
  switch-colon-spacing: [error, {after: true, before: false}]
  template-curly-spacing: [error, never]
  wrap-iife: [error, any]
  wrap-regex: error
  yield-star-spacing: [error, after]

